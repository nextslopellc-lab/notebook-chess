:root {
  --board-size: min(92vw, 560px);
  --sq: calc(var(--board-size) / 8);
  --light: #f0d9b5;
  --dark: #b58863;
  --accent: #3a86ff;
  --accent-soft: rgba(58,134,255,.22);
  --last: #ffd54f88;
  --move: #8bc34a88;
  --legal-dot: #000;
  --check-ring: #e53935;
  --mate-ring: #b71c1c;
  --piece-white-fill: #ffffff;
  --ring-radius: 10%; /* ring inset */
}

/* Check / Mate ring on the king square */
.square.check::after,
.square.mate::after{
  content: "";
  position: absolute;
  inset: var(--ring-radius);
  border-radius: 12%;
  border: 3px solid var(--check-ring);
  box-shadow: 0 0 8px var(--check-ring);
  pointer-events: none;
}
.square.mate::after{
  border-color: var(--mate-ring);
  box-shadow: 0 0 10px var(--mate-ring), 0 0 20px var(--mate-ring);
  animation: matePulse 1s ease-in-out infinite;
}
@keyframes matePulse{
  0%,100%{ transform: scale(1); opacity: 1; }
  50%{ transform: scale(1.03); opacity: 0.9; }
}

/* Improve visibility of white pieces without changing DOM:
   add a soft disc behind the Unicode glyph so the “hollow” areas read solid */
.piece.white{
  position: absolute; /* your pieces already are positioned; keep this consistent */
}
.piece.white::before{
  content: "";
  position: absolute;
  left: 50%; top: 50%;
  width: 76%; height: 76%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background: var(--piece-white-fill);
  box-shadow: 0 0 0 1px rgba(0,0,0,0.35) inset; /* subtle edge for light squares */
  z-index: 0;
}
.piece.white > span{
  position: relative; z-index: 1;
  /* make outlines read a touch bolder */
  -webkit-text-stroke: 0.6px rgba(0,0,0,0.75);
  text-shadow: 0 0 1px rgba(0,0,0,0.4);
}

/* Minimal overlay styling */
.overlay.hidden{ display: none; }
.overlay{
  position: fixed; inset: 0; background: rgba(0,0,0,0.5);
  display: grid; place-items: center; z-index: 9999;
}
.overlay-card{
  background: #fff; color: #111;
  width: min(92vw, 520px);
  padding: 16px; border-radius: 14px;
  box-shadow: 0 10px 30px rgba(0,0,0,0.25);
}
.overlay-card h2{ margin-top: 0; }
.overlay-card .home-actions{
  display: grid; gap: 8px; margin: 12px 0 8px;
}
.overlay-card button[disabled]{ opacity: 0.5; cursor: not-allowed; }

* { box-sizing: border-box; }
body {
  margin: 0;
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial;
  background: #0f1115; color: #eaeef7;
}

.topbar { display:flex; justify-content:space-between; align-items:center; padding:.75rem 1rem; border-bottom:1px solid #1d2230; }

.stage { display:grid; place-items:center; padding:1rem; }

.board {
  position: relative;
  width: var(--board-size);
  height: var(--board-size);
  border-radius: 1rem;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0,0,0,.45);
  border: 1px solid #1d2230;
}

/* Checkerboard */
.board::before { content:""; position:absolute; inset:0; z-index:1; background:none; }

.square.light { background: var(--light); }
.square.dark  { background: var(--dark); }

/* =================== Board Layers & Squares =================== */
/* Container layers (parent .board should be position:relative) */
.squares { position: absolute; inset: 0; z-index: 1; }
.pieces  { position: absolute; inset: 0; z-index: 3; pointer-events: none; }

/* Each square (absolutely positioned by JS; width/height set in JS) */
.square { position: absolute; z-index: 2; pointer-events: auto; }

/* =================== Pieces =================== */
/* Base piece node (keep smooth move animation) */
.piece {
  position: absolute;
  display: grid;
  place-items: center;
  user-select: none;
  pointer-events: none;        /* clicks go to .square */
  transition: left .18s ease, top .18s ease;
}

/* Per-side text color (don’t set color on .piece directly) */
.piece.white > span { color: #fafafa; }
.piece.black > span { color: #111; }

/* Glyph baseline */
.piece span { line-height: 1; }

/* (Optional) If you still want the white readability disc, uncomment:
.piece.white::before{
  content:"";
  position:absolute;
  left:50%; top:50%;
  width:64%; height:64%;
  transform:translate(-50%,-50%);
  border-radius:50%;
  background:rgba(255,255,255,0.9);
  box-shadow:0 0 0 1px rgba(0,0,0,0.25) inset;
  z-index:0;
}
.piece.white > span{
  position:relative; z-index:1;
  -webkit-text-stroke:0.6px rgba(0,0,0,0.7);
  text-shadow:0 0 1px rgba(0,0,0,0.35);
}
*/

/* =================== Highlights =================== */
/* Last move — align with JS classes (.last-from / .last-to) */
.square.last-from { box-shadow: inset 0 0 0 999px var(--move); }
.square.last-to   { box-shadow: inset 0 0 0 999px var(--last); }

/* If you still have old classes elsewhere, you can keep them mapping: */
.square.highlight-from { box-shadow: inset 0 0 0 999px var(--move); }
.square.highlight-last { box-shadow: inset 0 0 0 999px var(--last); }

/* Legal move indicator = centered black dot (replaces any border/outline) */
.square.target,
.square.highlight-target {          /* support both class names */
  outline: none !important;
  background: none !important;
  position: relative;
}
.square.target::after,
.square.highlight-target::after{
  content: "";
  position: absolute;
  left: 50%; top: 50%;
  width: 28%; height: 28%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background: #000;
  opacity: 0.85;
  pointer-events: none;
}

